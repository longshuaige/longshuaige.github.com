{"version":3,"file":"logger.js","sources":["../src/util.js","../src/plugins/logger.js"],"sourcesContent":["/**\n * Get the first item that pass the test\n * by second argument function\n *\n * @param {Array} list\n * @param {Function} f\n * @return {*}\n */\nexport function find (list, f) {\n  return list.filter(f)[0]\n}\n\n/**\n * Deep copy the given object considering circular structure.\n * This function caches all nested objects and its copies.\n * If it detects circular structure, use cached copy to avoid infinite loop.\n *\n * @param {*} obj\n * @param {Array<Object>} cache\n * @return {*}\n */\nexport function deepCopy (obj, cache = []) {\n  // just return if obj is immutable value\n  if (obj === null || typeof obj !== 'object') {\n    return obj\n  }\n\n  // if obj is hit, it is in circular structure\n  const hit = find(cache, c => c.original === obj)\n  if (hit) {\n    return hit.copy\n  }\n\n  const copy = Array.isArray(obj) ? [] : {}\n  // put the copy into cache at first\n  // because we want to refer it in recursive deepCopy\n  cache.push({\n    original: obj,\n    copy\n  })\n\n  Object.keys(obj).forEach(key => {\n    copy[key] = deepCopy(obj[key], cache)\n  })\n\n  return copy\n}\n\n/**\n * forEach for object\n */\nexport function forEachValue (obj, fn) {\n  Object.keys(obj).forEach(key => fn(obj[key], key))\n}\n\nexport function isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nexport function isPromise (val) {\n  return val && typeof val.then === 'function'\n}\n\nexport function assert (condition, msg) {\n  if (!condition) throw new Error(`[vuex] ${msg}`)\n}\n\nexport function partial (fn, arg) {\n  return function () {\n    return fn(arg)\n  }\n}\n","// Credits: borrowed code from fcomb/redux-logger\n\nimport { deepCopy } from '../util'\n\nexport default function createLogger ({\n  collapsed = true,\n  filter = (mutation, stateBefore, stateAfter) => true,\n  transformer = state => state,\n  mutationTransformer = mut => mut,\n  actionFilter = (action, state) => true,\n  actionTransformer = act => act,\n  logMutations = true,\n  logActions = true,\n  logger = console\n} = {}) {\n  return store => {\n    let prevState = deepCopy(store.state)\n\n    if (typeof logger === 'undefined') {\n      return\n    }\n\n    if (logMutations) {\n      store.subscribe((mutation, state) => {\n        const nextState = deepCopy(state)\n\n        if (filter(mutation, prevState, nextState)) {\n          const formattedTime = getFormattedTime()\n          const formattedMutation = mutationTransformer(mutation)\n          const message = `mutation ${mutation.type}${formattedTime}`\n\n          startMessage(logger, message, collapsed)\n          logger.log('%c prev state', 'color: #9E9E9E; font-weight: bold', transformer(prevState))\n          logger.log('%c mutation', 'color: #03A9F4; font-weight: bold', formattedMutation)\n          logger.log('%c next state', 'color: #4CAF50; font-weight: bold', transformer(nextState))\n          endMessage(logger)\n        }\n\n        prevState = nextState\n      })\n    }\n\n    if (logActions) {\n      store.subscribeAction((action, state) => {\n        if (actionFilter(action, state)) {\n          const formattedTime = getFormattedTime()\n          const formattedAction = actionTransformer(action)\n          const message = `action ${action.type}${formattedTime}`\n\n          startMessage(logger, message, collapsed)\n          logger.log('%c action', 'color: #03A9F4; font-weight: bold', formattedAction)\n          endMessage(logger)\n        }\n      })\n    }\n  }\n}\n\nfunction startMessage (logger, message, collapsed) {\n  const startMessage = collapsed\n    ? logger.groupCollapsed\n    : logger.group\n\n  // render\n  try {\n    startMessage.call(logger, message)\n  } catch (e) {\n    logger.log(message)\n  }\n}\n\nfunction endMessage (logger) {\n  try {\n    logger.groupEnd()\n  } catch (e) {\n    logger.log('—— log end ——')\n  }\n}\n\nfunction getFormattedTime () {\n  const time = new Date()\n  return ` @ ${pad(time.getHours(), 2)}:${pad(time.getMinutes(), 2)}:${pad(time.getSeconds(), 2)}.${pad(time.getMilliseconds(), 3)}`\n}\n\nfunction repeat (str, times) {\n  return (new Array(times + 1)).join(str)\n}\n\nfunction pad (num, maxLength) {\n  return repeat('0', maxLength - num.toString().length) + num\n}\n"],"names":["const","let"],"mappings":"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"}